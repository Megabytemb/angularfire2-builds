{"version":3,"file":"task.js","sourceRoot":"","sources":["../../../../src/storage/task.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAa7C,MAAM,2BAA2B,IAAgB;IAC/C,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC9B,MAAM,CAAC;QACL,KAAK,KAAK,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;QAClC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;QAClC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE;QAC9B,KAAK,CAAC,UAA6B;YACjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SAC/B;QACD,eAAe,KAAK,MAAM,CAAC,MAAM,CAAC,EAAE;QACpC,iBAAiB;YACf,MAAM,CAAC,MAAM,CAAC,IAAI,CAChB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,EAC5B,GAAG,CAAC,CAAC,IAAI,CAAE,CAAC,gBAAgB,GAAG,CAAE,CAAC,UAAU,GAAG,GAAG,CAAC,CACpD,CAAC;SACH;QACD,WAAW;YACT,MAAM,CAAC,MAAM,CAAC,IAAI,CAChB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,EAC5B,MAAM,CAAC,CAAC,IAAI,CAAE,CAAC,gBAAgB,KAAK,CAAE,CAAC,UAAU,CAAC,EAClD,GAAG,CAAC,CAAC,IAAI,CAAE,CAAC,WAAW,CAAC,CACzB,CAAC;SACH;KACF,CAAC;CACH","sourcesContent":["import { UploadTaskSnapshot, UploadTask } from '@firebase/storage-types';\nimport { fromTask } from './observable/fromTask';\nimport { Observable } from 'rxjs/Observable';\nimport { map, filter } from 'rxjs/operators';\n\nexport interface AngularFireUploadTask {\n  snapshotChanges(): Observable<UploadTaskSnapshot | undefined>;\n  percentageChanges(): Observable<number | undefined>;\n  downloadURL(): Observable<string | null>;\n  pause(): boolean;\n  cancel(): boolean;\n  resume(): boolean;\n  then(): Promise<any>;\n  catch(onRejected: (a: Error) => any): Promise<any>;\n}\n\nexport function createUploadTask(task: UploadTask): AngularFireUploadTask {\n  const inner$ = fromTask(task);\n  return {\n    pause() { return task.pause(); },\n    cancel() { return task.cancel(); },\n    resume() { return task.resume(); },\n    then() { return task.then(); },\n    catch(onRejected: (a: Error) => any) {\n      return task.catch(onRejected);\n    },\n    snapshotChanges() { return inner$; },\n    percentageChanges() {\n      return inner$.pipe(\n        filter(s => s !== undefined),\n        map(s => s!.bytesTransferred / s!.totalBytes * 100)\n      );\n    },\n    downloadURL() {\n      return inner$.pipe(\n        filter(s => s !== undefined),\n        filter(s => s!.bytesTransferred === s!.totalBytes),\n        map(s => s!.downloadURL)\n      );\n    }\n  };\n}\n"]}